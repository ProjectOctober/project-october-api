/**
 * generated by Scrooge 3.0.5-SNAPSHOT
 */
package october

import com.twitter.scrooge.ThriftEnum

/** The types of actions that can be performed in a triple (subject, verb, object) */
case object Action {
  case object Read extends Action {
    val value = 0
    val name = "Read"
  }
  case object VoteUp extends Action {
    val value = 1
    val name = "VoteUp"
  }
  case object VoteDown extends Action {
    val value = 2
    val name = "VoteDown"
  }
  case object VoteNegate extends Action {
    val value = 3
    val name = "VoteNegate"
  }
  case object Post extends Action {
    val value = 4
    val name = "Post"
  }
  case object Comment extends Action {
    val value = 5
    val name = "Comment"
  }
  case object Report extends Action {
    val value = 6
    val name = "Report"
  }
  case object Tag extends Action {
    val value = 7
    val name = "Tag"
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * @throws NoSuchElementException if the value is not found.
   */
  def apply(value: Int): Action = {
    value match {
      case 0 => Read
      case 1 => VoteUp
      case 2 => VoteDown
      case 3 => VoteNegate
      case 4 => Post
      case 5 => Comment
      case 6 => Report
      case 7 => Tag
      case _ => throw new NoSuchElementException(value.toString)
    }
  }

  /**
   * Find the enum by its integer value, as defined in the Thrift IDL.
   * Returns None if the value is not found
   */
  def get(value: Int): Option[Action] = {
    value match {
      case 0 => scala.Some(Read)
      case 1 => scala.Some(VoteUp)
      case 2 => scala.Some(VoteDown)
      case 3 => scala.Some(VoteNegate)
      case 4 => scala.Some(Post)
      case 5 => scala.Some(Comment)
      case 6 => scala.Some(Report)
      case 7 => scala.Some(Tag)
      case _ => scala.None
    }
  }

  def valueOf(name: String): Option[Action] = {
    name.toLowerCase match {
      case "read" => scala.Some(Action.Read)
      case "voteup" => scala.Some(Action.VoteUp)
      case "votedown" => scala.Some(Action.VoteDown)
      case "votenegate" => scala.Some(Action.VoteNegate)
      case "post" => scala.Some(Action.Post)
      case "comment" => scala.Some(Action.Comment)
      case "report" => scala.Some(Action.Report)
      case "tag" => scala.Some(Action.Tag)
      case _ => scala.None
    }
  }
}


/** The types of actions that can be performed in a triple (subject, verb, object) */
sealed trait Action extends ThriftEnum with Serializable